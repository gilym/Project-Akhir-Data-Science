})
output$his6 <- renderPlot({
barplot(colSums(s),col=rainbow(10),ylab='count',main='sentiment analisis')
})
output$plot  <- renderPlot({wordcloud(words = labelwc.Clean,scale=c(4,0.5), min.freq = input$freq,
max.words=input$max,
colors=brewer.pal(8, "Dark2"))
})
#database
output$Tab1 <- DT::renderDataTable(DT::datatable({
data <-biden1 }))
output$Tab2 <- DT::renderDataTable(DT::datatable({
data <-trump1 }))
output$Tab3 <- DT::renderDataTable(DT::datatable({
data <-label }))
output$Tab4 <- DT::renderDataTable(DT::datatable({
data <-clean }))
})
shinyApp(ui, server)
labelwc.Corpus<-Corpus(VectorSource(labelwc$text))
ui <- dashboardPage(
dashboardHeader(title = "Pilpres US 2024"),
dashboardSidebar(sidebarMenu(
menuItem("Dashboard", tabName = "Analisis", icon = icon("dashboard")),
menuItem("Database", tabName = "db", icon = icon("database"))
)),
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "Analisis",h2("Analisa Pilpres US 2024"),
fluidRow(
box(height = 450, width = 6,title = "Histogram Trump",
plotOutput('his1'),
),
box(height = 450, width = 6,title = "Histogram Biden",
plotOutput('his2'),
),
box(height = 450, width = 6,title = "Histogram Republik",
plotOutput('his3'),
),
box(height = 450, width = 6,title = "Histogram Demokrat",
plotOutput('his4'),
),
box(height = 450, width = 6,title = "Histogram Tanggapan Umum",
plotOutput("his5"),
),
box(height = 450, width = 6,title = "Histogram Emosi",
plotOutput("his6"),
),
br(),
br(),
box(title = "WordCloud Pilpres",
plotOutput("plot"),
),
box(
title = "Controls",
sliderInput("freq",
"Minimum Frequency:",
min = 1,  max = 100, value = 15),
sliderInput("max",
"Maximum Number of Words:",
min = 1,  max = 1000,  value = 100)
)
)
),
# Second tab content
tabItem(tabName = "db",
h4("Database Tanggapan"),
fluidRow(tabBox(id="tabchart1",
tabPanel("BidenRaw",DT::dataTableOutput("Tab1", height = "700px"), width = 9),
tabPanel("TrumpRaw",DT::dataTableOutput("Tab2", height = "700px"), width = 9),
tabPanel("UmumRaw",DT::dataTableOutput("Tab3", height = "700px"), width = 9),
tabPanel("UmumClean",DT::dataTableOutput("Tab4", height = "700px"), width = 9),
width = 12)),
)
)
)
)
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(here)
library(vroom)
library(dplyr)
library(SnowballC)
library(ggplot2)
library(plotly)
library(DT)
library(sass)
library(ECharts2Shiny)
library(wordcloud)
library(tm)
library(RColorBrewer)
library(memoise)
label<-vroom(here("Labeling Data Pilpres.csv"))
biden1<-vroom(here("data-raw/bidentwt.csv"))
trump1<-vroom(here("data-raw/trumptwt.csv"))
allraw<-vroom(here("data-raw/data-raw.csv"))
labelwc<-data.frame(label)
labelwc.Corpus<-Corpus(VectorSource((labelwc$text)))
labelwc.Clean<-tm_map(labelwc.Corpus, PlainTextDocument)
labelwc.Clean<-tm_map(labelwc.Corpus,tolower)
labelwc.Clean<-tm_map(labelwc.Clean,removeNumbers)
labelwc.Clean<-tm_map(labelwc.Clean,removeWords,stopwords("english"))
labelwc.Clean<-tm_map(labelwc.Clean,removePunctuation)
labelwc.Clean<-tm_map(labelwc.Clean,stripWhitespace)
labelwc.Clean<-tm_map(labelwc.Clean,stemDocument)
df <- data.frame(table(label$polarity))
biden1<- biden1[c(1,2,4,6,9)]
trump1<- trump1[c(1,2,4,6,9)]
labelwc.Corpus<-Corpus(VectorSource(labelwc$text))
ui <- dashboardPage(
dashboardHeader(title = "Pilpres US 2024"),
dashboardSidebar(sidebarMenu(
menuItem("Dashboard", tabName = "Analisis", icon = icon("dashboard")),
menuItem("Database", tabName = "db", icon = icon("database"))
)),
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "Analisis",h2("Analisa Pilpres US 2024"),
fluidRow(
box(height = 450, width = 6,title = "Histogram Trump",
plotOutput('his1'),
),
box(height = 450, width = 6,title = "Histogram Biden",
plotOutput('his2'),
),
box(height = 450, width = 6,title = "Histogram Republik",
plotOutput('his3'),
),
box(height = 450, width = 6,title = "Histogram Demokrat",
plotOutput('his4'),
),
box(height = 450, width = 6,title = "Histogram Tanggapan Umum",
plotOutput("his5"),
),
box(height = 450, width = 6,title = "Histogram Emosi",
plotOutput("his6"),
),
br(),
br(),
box(title = "WordCloud Pilpres",
plotOutput("plot"),
),
box(
title = "Controls",
sliderInput("freq",
"Minimum Frequency:",
min = 1,  max = 100, value = 15),
sliderInput("max",
"Maximum Number of Words:",
min = 1,  max = 1000,  value = 100)
)
)
),
# Second tab content
tabItem(tabName = "db",
h4("Database Tanggapan"),
fluidRow(tabBox(id="tabchart1",
tabPanel("BidenRaw",DT::dataTableOutput("Tab1", height = "700px"), width = 9),
tabPanel("TrumpRaw",DT::dataTableOutput("Tab2", height = "700px"), width = 9),
tabPanel("DataLabeling",DT::dataTableOutput("Tab3", height = "700px"), width = 9),
tabPanel("UmumRaw",DT::dataTableOutput("Tab4", height = "700px"), width = 9),
width = 12)),
)
)
)
)
server<-shinyServer(function(input, output,session){
# reads the data
# makes the cuisine selection
# Returns subset of data to be used for the neighborhood wordcloud
output$his1 <- renderPlot({
ggplot(trump, aes(x=polarity)) +
geom_bar(aes(y=..count.., fill=polarity)) +
scale_fill_brewer(palette="Set1") +
labs(x="polarity categories", y="number of tweets") +
labs(title = "Sentiment Analysis Donald Trump",
plot.title = element_text(size=12))
})
output$his2 <- renderPlot({
ggplot(biden, aes(x=polarity)) +
geom_bar(aes(y=..count.., fill=polarity)) +
scale_fill_brewer(palette="Set1") +
labs(x="polarity categories", y="number of tweets") +
labs(title = "Sentiment Analysis Joe Biden",
plot.title = element_text(size=12))
})
output$his3 <- renderPlot({
ggplot(republican, aes(x=polarity)) +
geom_bar(aes(y=..count.., fill=polarity)) +
scale_fill_brewer(palette="Set1") +
labs(x="polarity categories", y="number of tweets") +
labs(title = "Sentiment Analysis Republican",
plot.title = element_text(size=12))
})
output$his4 <- renderPlot({
ggplot(democratic, aes(x=polarity)) +
geom_bar(aes(y=..count.., fill=polarity)) +
scale_fill_brewer(palette="Set1") +
labs(x="polarity categories", y="number of tweets") +
labs(title = "Sentiment Analysis democratic",
plot.title = element_text(size=12))
})
output$his5 <- renderPlot({
ggplot(hasil, aes(x=polarity)) +
geom_bar(aes(y=..count.., fill=polarity)) +
scale_fill_brewer(palette="Set1") +
labs(x="polarity categories", y="number of tweets") +
labs(title = "Sentiment Analysis #USA Election",
plot.title = element_text(size=12))
})
output$his6 <- renderPlot({
barplot(colSums(s),col=rainbow(10),ylab='count',main='sentiment analisis')
})
output$plot  <- renderPlot({wordcloud(words = labelwc.Clean,scale=c(4,0.5), min.freq = input$freq,
max.words=input$max,
colors=brewer.pal(8, "Dark2"))
})
#database
output$Tab1 <- DT::renderDataTable(DT::datatable({
data <-biden1 }))
output$Tab2 <- DT::renderDataTable(DT::datatable({
data <-trump1 }))
output$Tab3 <- DT::renderDataTable(DT::datatable({
data <-label }))
output$Tab4 <- DT::renderDataTable(DT::datatable({
data <-allraw }))
})
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(here)
library(vroom)
library(dplyr)
library(SnowballC)
library(ggplot2)
library(plotly)
library(DT)
library(sass)
library(ECharts2Shiny)
library(wordcloud)
library(tm)
library(RColorBrewer)
library(memoise)
label<-vroom(here("Labeling Data Pilpres.csv"))
biden1<-vroom(here("data-raw/bidentwt.csv"))
trump1<-vroom(here("data-raw/trumptwt.csv"))
allraw<-vroom(here("data-raw/data-raw.csv"))
labelwc<-data.frame(label)
labelwc.Corpus<-Corpus(VectorSource((labelwc$text)))
labelwc.Clean<-tm_map(labelwc.Corpus, PlainTextDocument)
labelwc.Clean<-tm_map(labelwc.Corpus,tolower)
labelwc.Clean<-tm_map(labelwc.Clean,removeNumbers)
labelwc.Clean<-tm_map(labelwc.Clean,removeWords,stopwords("english"))
labelwc.Clean<-tm_map(labelwc.Clean,removePunctuation)
labelwc.Clean<-tm_map(labelwc.Clean,stripWhitespace)
labelwc.Clean<-tm_map(labelwc.Clean,stemDocument)
df <- data.frame(table(label$polarity))
biden1<- biden1[c(1,2,4,6,9)]
trump1<- trump1[c(1,2,4,6,9)]
allraw<- allraw[c(1,2,4,6,9)]
shinyApp(ui, server)
shinyApp(ui, server)
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah,shape = "cloud",
backgroundColor = "white",
color = 'random-light',
size = 2,
)
setwd("D:/ProjectDs")
library(e1071)
library(caret)
library(rtweet)
library(twitteR)
library(ROAuth)
library(dplyr)
library(tidyr)
library(shiny) #package shiny
library(syuzhet) #package analisis sentimen
library(wordcloud2) #package wordcloud
library(readr)
library(tm)
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah,shape = "cloud",
backgroundColor = "white",
color = 'random-light',
size = 2,
)
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah,shape = "cloud",
backgroundColor = "white",
color = 'random-light',
size = 3,
)
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah,shape = "cloud",
backgroundColor = "white",
color = 'random-light',
size = 0.2,
)
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah,shape = "cloud",
backgroundColor = "white",
color = 'random-light',
size = 0.5,
)
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah,shape = "cloud",
backgroundColor = "white",
color = 'random-light',
size = 0.8,
)
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah,shape = "cloud",
backgroundColor = "white",
color = 'random-light',
size = 1,
)
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah,shape = "star",
backgroundColor = "white",
color = 'random-light',
size = 1,
)
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah,shape = "circle",
backgroundColor = "white",
color = 'random-light',
size = 1,
)
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah,shape = "circle",
backgroundColor = "white",
color = 'random-light',
size = 1,
word = "USA"
)
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah,shape = "circle",
backgroundColor = "white",
color = 'random-light',
size = 1,
minSize = 100
)
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah,shape = "circle",
backgroundColor = "white",
color = 'random-light',
size = 1,
minSize = 20
)
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah,shape = "circle",
backgroundColor = "white",
color = 'random-light',
size = 1,
minSize = 10
)
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah,shape = "circle",
backgroundColor = "white",
color = 'random-light',
size = 1,
minSize = 2
)
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah, size = 1, minSize = 5, gridSize =  0,
fontFamily = 'Segoe UI', fontWeight = 'bold',
color = 'random-dark', backgroundColor = "white",
minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
widgetsize = NULL, figPath = NULL, hoverFunction = NULL
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah, size = 1, minSize = 5, gridSize =  0,
fontFamily = 'Segoe UI', fontWeight = 'bold',
color = 'random-dark', backgroundColor = "white",
minRotation = -pi/4, maxRotation = pi/4, shuffle = TRUE,
rotateRatio = 0.4, shape = 'circle', ellipticity = 0.65,
widgetsize = NULL, figPath = NULL, hoverFunction = NULL)
#membuat nilai untuk masing-masing kata
{
dtm<-TermDocumentMatrix(dupli)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing = TRUE)
tweetMentah<-data.frame(word=names(v),freq=v)
}
head(tweetMentah,n=10)
wordcloud2(tweetMentah,shape = "circle",
backgroundColor = "white",
color = 'random-light',
size = 1,
minSize = 2
)
shinyApp(ui, server)
runApp('D:/bny/1%20Basic%20App/8 R Shiny Dynamically update SelectInput choices.R')
runApp('D:/bny/1%20Basic%20App/8 R Shiny Dynamically update SelectInput choices.R')
runApp('D:/bny/1%20Basic%20App/9 R Shiny Fluid Layout with a Sidebar.R')
runApp('D:/bny/1%20Basic%20App/9 R Shiny Fluid Layout with a Sidebar.R')
